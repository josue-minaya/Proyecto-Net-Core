// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Net_Core.Models;

namespace ProyectoNetCore.Migrations
{
    [DbContext(typeof(VentasContext))]
    partial class VentasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Proyecto_Net_Core.Models.Cajero", b =>
                {
                    b.Property<int>("CajeroId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmpleadoId");

                    b.Property<int>("numcaja");

                    b.Property<float>("sueldo");

                    b.HasKey("CajeroId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Cajero");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nombre");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apellido");

                    b.Property<string>("direccion");

                    b.Property<int>("dni");

                    b.Property<string>("nombre");

                    b.Property<string>("nombre_puesto");

                    b.Property<string>("password");

                    b.Property<int>("telefono");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_cuerpo", b =>
                {
                    b.Property<int>("Pedido_cuerpoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Pedido_encabezadoId");

                    b.Property<int>("cantidad");

                    b.Property<string>("codproducto");

                    b.Property<float>("precio");

                    b.HasKey("Pedido_cuerpoId");

                    b.HasIndex("Pedido_encabezadoId");

                    b.ToTable("Pedido_cuerpo");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_encabezado", b =>
                {
                    b.Property<int>("Pedido_encabezadoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("VendedorId");

                    b.Property<string>("fecha");

                    b.Property<float>("monto");

                    b.Property<string>("nombre");

                    b.HasKey("Pedido_encabezadoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Pedido_encabezado");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_Producto", b =>
                {
                    b.Property<int>("Pedido_encabezadoId");

                    b.Property<string>("ProductoId");

                    b.Property<string>("tipoc");

                    b.HasKey("Pedido_encabezadoId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Pedido_Producto");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Producto", b =>
                {
                    b.Property<string>("ProductoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoriaId");

                    b.Property<string>("especificaciones");

                    b.Property<string>("foto");

                    b.Property<float>("precio");

                    b.Property<int>("stock");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Vendedor", b =>
                {
                    b.Property<int>("VendedorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmpleadoId");

                    b.Property<float>("sueldo_base");

                    b.HasKey("VendedorId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CajeroId");

                    b.Property<int>("Pedido_encabezadoId");

                    b.Property<string>("fecha");

                    b.Property<int>("numboleta");

                    b.HasKey("VentaId");

                    b.HasIndex("CajeroId");

                    b.HasIndex("Pedido_encabezadoId")
                        .IsUnique();

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Cajero", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Empleado", "Empleado")
                        .WithMany("Cajeros")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_cuerpo", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Pedido_encabezado", "Pedido_encabezado")
                        .WithMany("Pedido_cuerpos")
                        .HasForeignKey("Pedido_encabezadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_encabezado", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Vendedor", "Vendedor")
                        .WithMany("Pedido_encabezados")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Pedido_Producto", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Pedido_encabezado", "Pedido_encabezado")
                        .WithMany("Pedido_Productos")
                        .HasForeignKey("Pedido_encabezadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Net_Core.Models.Producto", "Producto")
                        .WithMany("Pedido_Productos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Producto", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Vendedor", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Empleado", "Empleado")
                        .WithMany("Vendedores")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proyecto_Net_Core.Models.Venta", b =>
                {
                    b.HasOne("Proyecto_Net_Core.Models.Cajero", "Cajero")
                        .WithMany("Ventas")
                        .HasForeignKey("CajeroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_Net_Core.Models.Pedido_encabezado", "Pedido_encabezado")
                        .WithOne("Venta")
                        .HasForeignKey("Proyecto_Net_Core.Models.Venta", "Pedido_encabezadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
